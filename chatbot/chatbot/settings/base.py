"""
Django settings for chatbot project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Normally you should not import anything from django directly in your settings
# ImproperlyConfigured is an exception
from django.core.exceptions import ImproperlyConfigured


def get_env_variable(var_name):
    """
    Get an environment variable or raise exception
    """
    try:
        return os.environ[var_name]
    except KeyError:
        error_msg = "Set the {} environment variable".format(var_name)
        raise ImproperlyConfigured(error_msg)



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'w*yi^ck*xix)ojh@m^mm%&0!%!x0ux-*&*5ih^2_7%3hq#fp1e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'auth.apps.AuthConfig',
    'chat',
    'base',
    'django_extensions',
    'rest_framework.authtoken',
    'corsheaders',
    'channels',
    # 'django_ses',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_HEADERS = (
    'x-requested-with',
    'content-type',
    'accept',
    'origin',
    'DNT',
    'authorization',
    'x-csrftoken',
    'cache-control',
    'accept-encoding',
    'chatbot-client-key',
    'chatbot-client-secret'
)

ROOT_URLCONF = 'chatbot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'chatbot.wsgi.application'

# facebook credentials
FB_PAGE_ACCESS_TOKEN = get_env_variable('CHATBOT_FB_PAGE_ACCESS_TOKEN')
CHATBOT_FB_PAGE_ID = get_env_variable('CHATBOT_FB_PAGE_ID')

DEFAULT_FROM_EMAIL = 'chatbot <anubhav@launchyard.com>'
EMAIL_HOST_USER = 'anubhav@launchyard.com'
EMAIL_HOST_PASSWORD = get_env_variable('DJANGO_EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587

# CHATBOT CALLBACK URLS
CHATBOT_CALLBACK_URL = get_env_variable('CHATBOT_CALLBACK_URL')
CHATBOT_MEDIUM_URL = get_env_variable('CHATBOT_MEDIUM_URL')

# AWS CREDENTIALS
AWS_ACCESS_KEY_ID = get_env_variable('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = get_env_variable('AWS_SECRET_ACCESS_KEY')

# API HOST
API_HOST = get_env_variable('API_HOST')


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# Celery Data Format
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Kolkata'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

FB_USER_REMINDER_TIME = 3 # in hours

CHANNEL_LAYERS = {
   "default": {
       "BACKEND": "asgi_redis.RedisChannelLayer",  # use redis backend
       "CONFIG": {
           "hosts": [os.environ.get('REDIS_URL', 'redis://localhost:6379')],  # set redis address
       },
       "ROUTING": "chatbot.routing.channel_routing",  # load routing from our routing.py file
   },
}

WIT_SERVER_ACCESS_TOKEN = get_env_variable('WIT_SERVER_ACCESS_TOKEN')

STORE_UNSTRUCTURED_ANSWER = True

MICROSOFT_APP_ID = get_env_variable('MICROSOFT_APP_ID')
MICROSOFT_APP_SECRET = get_env_variable('MICROSOFT_APP_SECRET')

DEFAULT_MICROSOFT_SERVICE_URL = get_env_variable(
                        'DEFAULT_MICROSOFT_SERVICE_URL')
